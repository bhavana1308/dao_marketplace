Index: src/main/resources/connection.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>CONNECTION_URL=url\nUSER=root\nPASS=password
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/main/resources/connection.properties b/src/main/resources/connection.properties
--- a/src/main/resources/connection.properties	(revision 5bb0feb569a58e8b11af8750352bf6ba84275e7b)
+++ b/src/main/resources/connection.properties	(date 1686753347525)
@@ -1,3 +1,3 @@
-CONNECTION_URL=url
+CONNECTION_URL=jdbc:mysql://localhost:3306/onlinemarketplace
 USER=root
-PASS=password
\ No newline at end of file
+PASS=Venny1308#
\ No newline at end of file
Index: src/main/java/org/solvd/com/dao/service/DiscountsDao.java
===================================================================
diff --git a/src/main/java/org/solvd/com/dao/service/DiscountsDao.java b/src/main/java/org/solvd/com/dao/service/DiscountsDao.java
deleted file mode 100644
--- a/src/main/java/org/solvd/com/dao/service/DiscountsDao.java	(revision 5bb0feb569a58e8b11af8750352bf6ba84275e7b)
+++ /dev/null	(revision 5bb0feb569a58e8b11af8750352bf6ba84275e7b)
@@ -1,110 +0,0 @@
-package org.solvd.com.dao.service;
-
-import org.solvd.com.dao.exception.DaoException;
-import org.solvd.com.dao.model.Discounts;
-import org.solvd.com.dao.utils.AbstractDao;
-import org.solvd.com.dao.utils.ConnectionFactory;
-
-import java.sql.*;
-import java.util.ArrayList;
-import java.util.List;
-
-public class DiscountsDao extends AbstractDao<Discounts> {
-
-    private final String INSERT_QUERY = "INSERT INTO discounts (discountName,description,discountPercent) VALUES (?,?,?);";
-
-    private final String UPDATE_QUERY = "UPDATE discounts SET discountName=?, description=?, discountPercent=? WHERE discountId = ?;";
-
-    private final String GET_RANDOM_QUERY = "SELECT * FROM discounts LIMIT 1;";
-
-    private final String DELETE_QUERY = "DELETE FROM discounts WHERE discountId= ?";
-
-    private final String GET_ALL_QUERY = "SELECT * FROM discounts";
-
-
-    private Discounts getDiscountsFromResultSet(ResultSet resultSet) throws SQLException {
-        Discounts discounts = new Discounts();
-        discounts.setDiscountId(resultSet.getInt("discountId"));
-        discounts.setDiscountName(resultSet.getString("discountName"));
-        discounts.setDescription(resultSet.getString("description"));
-        discounts.setDiscountPercent(resultSet.getInt("discountPercent"));
-        return discounts;
-    }
-
-    public Discounts getRandomDiscount() {
-        Discounts discounts = null;
-        try (Connection connection = ConnectionFactory.getConnection();
-             Statement statement = connection.createStatement()) {
-            ResultSet resultSet = statement.executeQuery(GET_RANDOM_QUERY);
-            if (resultSet.next()) {
-                discounts = getDiscountsFromResultSet(resultSet);
-            } else {
-                throw new DaoException("No discounts entry was found!");
-            }
-        } catch (Exception e) {
-            e.printStackTrace();
-        }
-        return discounts;
-    }
-
-    public Discounts insert(Discounts discounts) {
-        try (Connection connection = ConnectionFactory.getConnection();
-             PreparedStatement statement = connection.prepareStatement(INSERT_QUERY)) {
-            statement.setString(1, discounts.getDiscountName());
-            statement.setString(2, discounts.getDescription());
-            statement.setInt(3, discounts.getDiscountPercent());
-            statement.executeUpdate();
-        } catch (SQLException e) {
-            e.printStackTrace();
-        }
-        return discounts;
-    }
-
-    public Discounts update(Discounts discounts) {
-        try (Connection connection = ConnectionFactory.getConnection();
-             PreparedStatement statement = connection.prepareStatement(UPDATE_QUERY)) {
-            statement.setString(1, discounts.getDiscountName());
-            statement.setString(2, discounts.getDescription());
-            statement.setInt(3, discounts.getDiscountPercent());
-            statement.setInt(4, discounts.getDiscountId());
-            statement.executeUpdate();
-        } catch (SQLException e) {
-            e.printStackTrace();
-        }
-        return discounts;
-    }
-
-    @Override
-    public Discounts findById(int id) {
-        return null;
-    }
-
-    public List<Discounts> getAll() {
-        List<Discounts> discounts = new ArrayList<>();
-        try (Connection connection = ConnectionFactory.getConnection();
-             Statement statement = connection.createStatement()) {
-            ResultSet resultSet = statement.executeQuery(GET_ALL_QUERY);
-            while (resultSet.next()) {
-                Discounts discounts1 = getDiscountsFromResultSet(resultSet);
-                discounts.add(discounts1);
-            }
-        } catch (SQLException e) {
-            e.printStackTrace();
-        }
-        return discounts;
-    }
-
-    public void delete(Discounts discounts) {
-        try (Connection connection = ConnectionFactory.getConnection();
-             PreparedStatement statement = connection.prepareStatement(DELETE_QUERY)) {
-            statement.setInt(1, discounts.getDiscountId());
-            statement.execute("SET FOREIGN_KEY_CHECKS=0");
-            statement.executeUpdate();
-            statement.execute("SET FOREIGN_KEY_CHECKS=1");
-        } catch (SQLException e) {
-            e.printStackTrace();
-        }
-    }
-}
-
-
